replicaCount: 1

image:
  repository: apache/zeppelin
  tag: 0.10.1
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

env:
  # 'serviceDomain' is a Domain name to use for accessing Zeppelin UI.
  # Should point IP address of 'zeppelin-server' service.
  #
  # Wildcard subdomain need to be point the same IP address to access service inside of Pod (such as SparkUI).
  # i.e. if service domain is 'local.zeppelin-project.org', DNS configuration should make 'local.zeppelin-project.org' and '*.local.zeppelin-project.org' point the same address.
  #
  # Default value is 'local.zeppelin-project.org' while it points 127.0.0.1 and `kubectl port-forward zeppelin-server` will give localhost to connects.
  # If you have your ingress controller configured to connect to `zeppelin-server` service and have a domain name for it (with wildcard subdomain point the same address), you can replace serviceDomain field with your own domain.
  SERVICE_DOMAIN: ""
  ZEPPELIN_K8S_SPARK_CONTAINER_IMAGE: gcr.io/spark-operator/spark:v3.1.1
  ZEPPELIN_K8S_CONTAINER_IMAGE: apache/zeppelin:0.10.1
  ZEPPELIN_HOME: /opt/zeppelin
  ZEPPELIN_PORT: 8080
  ZEPPELIN_SERVER_RPC_PORTRANGE: 12320:12320
  FLINK_HOME: /opt/flink
  SPARK_MASTER: k8s://https://kubernetes.default.svc
  SPARK_HOME: /spark

# extraEnvVarsCM -- Extra env configmap name
extraEnvVarsCM: ""

# extraEnvVarsSecret -- Extra env secret name
extraEnvVarsSecret: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"

  # Optionally use ingressClassName instead of deprecated annotation.
  # See: https://kubernetes.io/docs/concepts/services-networking/ingress/#deprecated-annotation
  ingressClassName: ""
  
  # As of Kubernetes 1.19, all Ingress Paths must have a pathType configured. The default value below should be sufficient in most cases.
  # See: https://kubernetes.io/docs/concepts/services-networking/ingress/#path-types for other possible values.
  pathType: Prefix

  hosts:
    - host: chart-example.local
      paths: ['/']
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# additionalVolumeMounts -- additional volume mounts
additionalVolumeMounts: []
  # - name: cache
  #   mountPath: /data

# additionalVolumes -- additional volumes
additionalVolumes: []
  # - name: cache
  #   emptyDir: {}

# persistence -- create pvc to store data
persistence:
  annotations: {}
  enabled: false
  accessMode: ReadWriteOnce
  storageClass: null
  storageSize: 1Gi
  mountPath: /data
  # existingClaim:
  # annotations:
  #  "helm.sh/resource-policy": keep
  # If PersistentDisk already exists you can create a PV for it by including the 2 following keypairs.
  # pdName: nexus-data-disk
  # fsType: ext4

  # extraContainers -- Launch additional containers into zeppelin pod
  extraContainers: []